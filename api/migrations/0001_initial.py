# Generated by Django 3.2.6 on 2021-09-01 09:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Command',
            fields=[
                ('id', models.CharField(blank=True, editable=False, max_length=30, primary_key=True, serialize=False, unique=True)),
                ('addDate', models.DateTimeField(auto_now_add=True)),
                ('commandDate', models.DateTimeField(auto_now_add=True)),
                ('totalPrice', models.FloatField(default='')),
                ('command_by', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CommandRow',
            fields=[
                ('id', models.CharField(blank=True, editable=False, max_length=30, primary_key=True, serialize=False, unique=True)),
                ('addDate', models.DateTimeField(auto_now_add=True)),
                ('quantityOrdered', models.IntegerField()),
                ('command', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='api.command')),
            ],
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.CharField(blank=True, editable=False, max_length=30, primary_key=True, serialize=False, unique=True)),
                ('addDate', models.DateTimeField(auto_now_add=True)),
                ('deliveryDate', models.DateTimeField(auto_now_add=True)),
                ('totalProductDelivered', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.CharField(blank=True, editable=False, max_length=30, primary_key=True, serialize=False, unique=True)),
                ('addDate', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=60, unique=True)),
                ('description', models.CharField(max_length=1500)),
                ('unitPrice', models.FloatField()),
                ('stockUnit', models.CharField(choices=[('UNIT', 'Unit'), ('KILOGRAM', 'Kilogram'), ('LITER', 'Liter')], default='UNIT', max_length=20)),
                ('stockQuantity', models.FloatField()),
                ('alertThreshold', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryDetails',
            fields=[
                ('id', models.CharField(blank=True, editable=False, max_length=30, primary_key=True, serialize=False, unique=True)),
                ('quantityDelivered', models.IntegerField()),
                ('addDate', models.DateTimeField(auto_now_add=True)),
                ('commandRow', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='api.commandrow')),
                ('delivery', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='api.delivery')),
            ],
        ),
        migrations.AddField(
            model_name='delivery',
            name='commandRows',
            field=models.ManyToManyField(related_name='deliveries', through='api.DeliveryDetails', to='api.CommandRow'),
        ),
        migrations.AddField(
            model_name='delivery',
            name='received_by',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='commandrow',
            name='product',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='api.product'),
        ),
        migrations.AddField(
            model_name='command',
            name='products',
            field=models.ManyToManyField(related_name='commands', through='api.CommandRow', to='api.Product'),
        ),
    ]
